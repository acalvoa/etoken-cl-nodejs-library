<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<DocumentoType xmlns:ns2="http://www.contraloria.cl/2005/05/CGRDoc" xmlns="http://www.w3.org/2000/09/xmldsig#">
	<Contenido codigo="Contratos de personas naturales a honorarios Asimilado a Grado" ID="401910">
		<Folio codigo="25">
			<Numero>2017</Numero>
			<Agno>9001</Agno>
		</Folio>
		<ContenidoDecreto>
			<CtlPrevLeg>AFECTO</CtlPrevLeg>
			<NivelConfid>PUBLICO</NivelConfid>
			<Materia>Contratos de personas naturales a honorarios Asimilado a Grado</Materia>
			<Fecha>2017-09-22-03:00</Fecha>
			<Visto>
				<Parrafo numero="1">Se ha dirigido a esta Contraloría General don Manuel Pinto Cortéz, quien prestó servicios en la Subsecretaría General de Gobierno, para solicitar un pronunciamiento relativo a las irregularidades en que se habría incurrido en la ejecución y término anticipado de su contratación a honorarios correspondiente al año 2010.&#xD;
&#xD;
Requerido su informe, el mencionado organismo señaló, en síntesis, que a través del decreto exento N° 561, de 2010, del Ministerio Secretaría General de Gobierno, se reconoció y puso término a la situación de hecho generada por la no suscripción oportuna, por parte de la autoridad de la época, de los convenios a honorarios de diversas personas, entre ellas el reclamante, reconociendo asimismo el derecho al pago de los respectivos honorarios por las labores prestadas entre el 1 de enero y el 30 de junio de esa anualidad, por lo que entiende que la falta de formalización de la contratación antes referida se encuentra subsanada, añadiendo que para efectos de esclarecer los hechos y determinar eventuales responsabilidades administrativas, se ordenó, por medio de la resolución exenta N° 272, de 2010, la instrucción de una investigación sumaria. &#xD;
&#xD;
Sobre el particular, cabe señalar que de los antecedentes tenidos a la vista se advierte que, efectivamente, mediante el aludido decreto exento N° 561, de 2010, se reconocen las labores prestadas, entre otros, por el interesado, en el período antes referido, cuyos convenios a honorarios no fueron oportunamente suscritos por el ex Subsecretario del ramo -y, por ende, tampoco aprobados por el correspondiente acto administrativo-, y la procedencia del pago de honorarios por ese lapso, siendo dable agregar que el número dos del mencionado decreto exento, determina no suscribir un contrato con las referidas personas con posterioridad al 30 de junio de esa misma anualidad, por estimar que sus servicios no resultaban necesarios.&#xD;
&#xD;
Ahora bien, de lo expresado se advierte que la convención a que alude el peticionario no produjo efectos, como quiera que la autoridad no concurrió a su suscripción, como tampoco se dictó el acto administrativo aprobatorio del mismo, por lo que se estima ajustado a derecho el decreto exento N° 561, de 2010, del Ministerio Secretaría General de Gobierno.&#xD;
&#xD;
Lo anterior, toda vez que, por una parte, de conformidad con lo previsto en el artículo 1° de la ley N° 19.880, que establece bases de los procedimientos administrativos que rigen los actos de los Órganos de la Administración del Estado y en armonía con el criterio contenido en el dictamen N° 29.178, de 2009, de esta Contraloría General, la voluntad de la autoridad para celebrar ese tipo de convenios debe quedar reflejada tanto en la suscripción del acuerdo de voluntades como en el acto administrativo que lo aprueba, sin perjuicio, por otra, del derecho del prestador de los servicios a ser recompensado por las tareas efectivamente ejecutadas, en concordancia con lo expresado en el dictamen N° 38.146, de 2007, de igual origen.&#xD;
&#xD;
En este contexto, y sin perjuicio de lo señalado en orden a que la cuestionada convención no alcanzó a producir efectos, conviene hacer presente, en lo que atañe a la falta de aviso previo del cese anticipado de sus funciones, que denuncia el ocurrente, es necesario hacer presente que según el criterio contenido, entre otros, en el dictamen No 60.151, de 2010, de este Ente Fiscalizador, si bien a las personas contratadas a honorarios es posible concederles análogos derechos que los establecidos para los servidores regidos por la ley N° 18.834, sobre Estatuto Administrativo, éstos no pueden ir más allá de los que la ley prescribe para quienes tienen la calidad de funcionarios públicos, por lo que el preaviso que se reclama, aun cuando haya sido convenido, como habría acontecido en la especie, no resulta procedente, pues ello constituye una diferencia que discrimina arbitrariamente en perjuicio de los servidores de planta y a contrata, quienes no gozan del mismo en el evento de disponerse el cese de sus funciones. &#xD;
&#xD;
Finalmente, en lo que respecta a los treinta días hábiles de feriado legal que se le reconocerían al interesado en el número uno de la cláusula octava del convenio en estudio, de los cuales le quedarían pendientes quince, es dable manifestar que resulta aplicable el criterio antes señalado, en el sentido de que la autoridad no puede pactar contratos a honorarios donde se establezcan beneficios que excedan en su naturaleza a los que se conceden a los empleados públicos, como el feriado acordado en los términos antes aludidos, derecho respecto del cual, en todo caso, la jurisprudencia de este Organismo de Control ha indicado, en su dictamen N° 43.087, de 2008, que sólo puede hacerse efectivo mientras se tenga la calidad de empleado, de lo que resulta forzoso colegir que si a un funcionario público no se le reconoce el feriado pendiente al momento de ponerse término a sus funciones, tampoco es factible hacerlo en favor de una persona contratada a honorarios luego del término de sus labores.&#xD;
&#xD;
En consecuencia, en virtud de las consideraciones expuestas, se rechazan los reclamos de don Manuel Pinto Cortéz.&#xD;
&#xD;
Ramiro Mendoza Zúñiga&#xD;
Contralor General de la República  </Parrafo>
				<Parrafo numero="1">Ley utilitaria para atomos que no estan asociados a una Ley</Parrafo>
				<Parrafo numero="1">&quot;Artículo 1º.- Introdúcense las siguientes modificaciones en el decreto ley Nº 1.263, de 1975:



     1) Agrégase, en el inciso tercero del artículo 9º, a continuación del punto aparte, que pasa a ser seguido, el siguiente párrafo:

     &quot;Para estos efectos, las dotaciones máximas de personal que se fijen incluirán al personal de planta, a contrata, contratado a honorarios asimilado a grado y a jornal en aquellos servicios cuyas leyes contemplen esta calidad.&quot;.

     2) Incorpórase, en el artículo 15, el siguiente inciso tercero:

     &quot;En cumplimiento de las obligaciones dispuestas en el inciso anterior, la Dirección de Presupuestos establecerá un sistema de información administrativa y financiera, de general aplicación para los órganos y servicios públicos regidos por el presente decreto ley; ello sin perjuicio de las facultades que tiene en la materia la Contraloría General de la República.&quot;.



     3) Sustitúyese el artículo 19 bis por el siguiente:

     &quot;Artículo 19 bis.- Los contratos de estudios para inversiones, de ejecución de obras y de adquisición de materiales y maquinarias, podrán celebrarse para que sean cumplidos o pagados en mayor tiempo que el del año presupuestario o con posterioridad al término del respectivo ejercicio. En estos casos, podrán efectuarse en el año presupuestario vigente, imputaciones parciales de fondos. El servicio público correspondiente sólo responderá de las inversiones hasta la concurrencia de los fondos que se consulten para estos efectos en cada año, en el respectivo presupuesto.

     Para lo dispuesto en el inciso anterior podrán otorgarse anticipos.

     Con todo, en los contratos a que se refiere el inciso primero, cualquiera que sea su denominación, no podrá pactarse el pago de todo o parte de su valor o precio en un plazo que exceda del ejercicio presupuestario en que se deba poner término al estudio, proyecto u obra contratado, en una forma distinta a la que resulte de relacionar los pagos con el avance efectivo de la ejecución de los mismos, o cualquier otra forma de pago diferido.

     Los estudios preinversionales y los programas o proyectos de inversión deberán contar, como documento interno de la Administración, con informe del organismo de planificación nacional o regional en su caso, el cual deberá estar fundamentado en una evaluación técnica económica que analice su rentabilidad. Corresponderá al Ministerio de Hacienda impartir instrucciones y resolver al respecto.

     La autorización de recursos para los estudios y programas o proyectos a que se refiere el inciso precedente y la celebración de los contratos respectivos, sólo podrá efectuarse previa identificación presupuestaria. Tal identificación deberá ser aprobada a nivel de asignaciones especiales, por decreto o resolución, según corresponda, conforme a las normas que establezca un reglamento, emanado del Ministerio de Hacienda, el cual establecerá los contenidos de dichos instrumentos aprobatorios, incluido lo relativo a montos por concepto de gasto, compromisos futuros que pueden irrogar y límites máximo, las autoridades facultadas para suscribirlos y los demás procedimientos y modalidades aplicables al efecto.

     Sin perjuicio de lo anterior, la dictación de los decretos o resoluciones respectivos podrá efectuarse a contar de la publicación a que se refiere el artículo siguiente y el llamado a propuestas públicas de los estudios y programas o proyectos de que den cuenta, desde su ingreso a la Contraloría General de la República.

     Una vez fijado el código y el nombre del estudio, programa o proyectos, en la identificación referida, éstos no podrán ser modificados.

     La identificación presupuestaria a que se refiere este artículo, no será aplicable a las instituciones señaladas en el decreto ley Nº 1.570, de 1976.&quot;.



     4) Sustitúyese el inciso segundo del artículo 26 por los siguientes:

     &quot;No obstante lo dispuesto en el inciso precedente, sólo por ley podrá autorizarse la transferencia de fondos entre Ministerios, el traspaso a las diferentes partidas de la Ley de Presupuestos de aquellos recursos que, previamente, hayan sido traspasados desde ellas al Tesoro Público, aportes a las empresas del Estado, sean públicas o sociedades anónimas, no incluidas en dicha ley y la concesión de aporte fiscal a municipalidades.

     Igualmente, sólo por ley podrá autorizarse el incremento de las sumas globales de gasto que la Ley de Presupuestos fijará anualmente. Para este efecto, la referida ley deberá establecer, de acuerdo a los conceptos que considere su estructura y el clasificador presupuestario en aplicación, los gastos que se comprenderán en dichas sumas globales, aquellos que se exceptuarán, y los márgenes de aumento de los gastos de capital no financieros que se eximirán de autorización legal.&quot;.

     5) Suprímese, en el inciso primero del artículo 29 la frase &quot;o a otras instituciones o empresas del sector público&quot;.

     6) Agréganse, al artículo 52, los siguientes incisos:

     &quot;Conforme a lo dispuesto en el inciso precedente, anualmente se efectuará la evaluación de los programas sociales, de fomento productivo y de desarrollo institucional incluidos en los presupuestos de los servicios públicos que se determinen mediante uno o más decretos del Ministerio de Hacienda, con sujeción a los procedimientos, entidades participantes, marcos de referencia y mecanismos que se establezcan en el o los respectivos decretos. Asimismo, los órganos y servicios públicos regidos por el título II de la ley Nº 18.575, deberán confeccionar y difundir anualmente un informe que incluya una cuenta de gestión operativa y económica del año precedente, con el cumplimiento de objetivos, tareas y metas, de acuerdo a las instrucciones que imparta el Ministerio de Hacienda.

     Los informes que se emitan por aplicación de los dos incisos anteriores, deberán remitirse a ambas ramas del Congreso Nacional en la oportunidad que se fije en los decretos e instrucciones respectivas.&quot;. 

 
 
     Artículo 2º.- Derógase el artículo 11 de la ley Nº 18.768. 

 
 
     Artículo 3º.- Los Ministerios, las Intendencias, las Gobernaciones y los órganos y servicios públicos que integran la Administración del Estado, no podrán incurrir en otros gastos por concepto de publicidad y difusión que los necesarios para el cumplimiento de sus funciones y en aquellos que tengan por objeto informar a los usuarios sobre la forma de acceder a las prestaciones que otorgan.

     Cuando no existan todavía prestaciones concretas que corresponda otorgar, el Poder Ejecutivo, a través de sus organismos dependientes o relacionados con él por intermedio de alguna de las Secretarías de Estado, sólo podrá informar sobre el contenido de los programas y acciones que resuelva propiciar, utilizando medios idóneos a tal efecto. En el caso de las iniciativas de ley, deberá señalar su sujeción a la aprobación legislativa correspondiente. 

 
 
     Artículo 4º.- Otórgase a los órganos y servicios públicos incluidos en la Ley de Presupuestos la facultad de aceptar y recibir donaciones de bienes y recursos destinados al cumplimiento de actividades o funciones que les competan.

     No obstante lo anterior, dichas entidades públicas requerirán de autorización previa del Ministerio de Hacienda para ejercer la facultad que les concede el inciso precedente o la que se contemple con igual sentido y alcance en la legislación que les sea aplicable. Se excluyen las donaciones, en especie o dinero, en situaciones de emergencia o calamidad pública, aquellas cuyo valor o monto no exceda al equivalente en moneda nacional de 250 unidades tributarias mensuales al momento del ofrecimiento y las que recaigan sobre bienes sujetos a próximo deterioro o descomposición.

     El producto de las donaciones se incorporará al presupuesto de la institución beneficiaria conforme a las instrucciones que imparta el Ministro de Hacienda. Con todo, las donaciones consistentes en bienes pasarán a formar parte de su patrimonio, cuando sea procedente, sin perjuicio del cumplimiento de las regulaciones a que se encuentre afecto el acto jurídico respectivo.

     Tratándose de donaciones de cooperación internacional o de convenios de cooperación o asistencia técnica no reembolsable, los órganos y servicios públicos mencionados en el inciso primero se entenderán facultados para pagar los impuestos, contribuciones, derechos o gravámenes, establecidos en la legislación chilena, de cargo de terceros y que, en virtud del respectivo convenio o contrato, hayan de ser asumidos por el donatario. En el caso del personal que la fuente de cooperación extranjera envíe a Chile, a su propia costa, para desarrollar actividades en cumplimiento del respectivo programa, la facultad referida se limitará al pago del impuesto sobre la renta que grave su salario o retribución.

     Los pagos que se efectúen de conformidad a lo dispuesto en el inciso anterior, podrán ser realizados mediante su ingreso a la entidad recaudadora correspondiente, reembolso al organismo o ente internacional donante, o bien su reembolso o pago al sujeto de derecho, según el impuesto, contribución, derecho o gravamen de que se trate, conforme a la reglamentación contenida en el decreto supremo Nº 209, de 1993, del Ministerio de Hacienda. 

 
 
     Artículo 5º.- Los decretos o resoluciones que aprueben la contratación de personas naturales a honorarios, en los órganos y servicios públicos incluidos en la Ley de Presupuestos, cualquiera que sea el ítem de imputación, deberán contar con visación del Ministerio correspondiente, para lo cual se acompañará un certificado emanado del órgano o servicio respectivo en que conste que el monto comprometido se ajusta a la disponibilidad presupuestaria y, en su caso, a la autorización máxima otorgada en la referida ley para la anualidad respectiva.

     El procedimiento señalado en el inciso precedente se aplicará igualmente a las contrataciones en el mismo servicio con aplicación de lo dispuesto en la letra d) del artículo 81 de la ley Nº 18.834.

     Las personas contratadas a honorarios, bajo cualquier forma que se exprese el pago, deberán informar al o los jefes del servicio respectivo, a través de la unidad correspondiente, mediante una declaración jurada simple, si prestan servicios en cualquier calidad jurídica en otra repartición pública. En tal caso, deberán individualizar al otro Servicio, especificando la calidad jurídica con que laboran en él, el monto de los emolumentos correspondientes, las tareas contratadas y la duración de la prestación de sus servicios. Copia de los antecedentes mencionados deberá ser remitida a la Contraloría General de la República.

     Al momento de suscribirse un contrato a honorarios, el Servicio correspondiente tendrá la obligación de requerir la información señalada en el inciso anterior, debiendo el jefe de servicio constatar que no se produzca un actual o eventual conflicto de intereses por el cumplimiento de las funciones contratadas, y certificar tal circunstancia. Se entenderá que hay conflicto de intereses cuando las labores encomendadas en los diversos organismos pongan a la persona a quien se le ha encomendado tareas en ambos, en situación de lesionar los objetivos de cualquiera de esas entidades o cuando sus propios intereses personales puedan pugnar con los de alguna de ellas.

     En el caso que una persona tenga más de un contrato a honorarios en entidades públicas, requerirá de la visación previa, en el acto administrativo correspondiente, del ministro respectivo.

     La misma visación será exigible cuando la persona contratada a honorarios tenga, además, un contrato con proveedores o contratistas o con instituciones privadas que tengan convenios para ejecución de proyectos o se le hayan otorgado transferencias, en relación con la repartición en que presta servicios.

     Se exceptúan de las normas establecidas en los dos incisos anteriores las labores de docencia que dichas personas desarrollen en instituciones de educación superior.

     Las normas sobre inhabilidades e incompatibilidades administrativas establecidas en los artículos 54, 55 y 56 de la ley Nº 18.575, Orgánica Constitucional sobre Bases Generales de la Administración del Estado, serán aplicables asimismo a los contratados a honorarios, debiendo dejarse constancia en los contratos respectivos de una cláusula que así lo disponga.

     Del mismo modo, cada jefe de servicio deberá informar a todos quienes vayan a ingresar o laboren en él, en cualquier condición jurídica, acerca de las diversas inhabilidades, incompatibilidades y prohibiciones que establecen las leyes, tales como la Nº 18.834, Estatuto Administrativo, la Nº 18.575, Orgánica Constitucional sobre Bases Generales de la Administración del Estado, y otras que afecten a la repartición correspondiente, como asimismo, las modificaciones legales que se le introduzcan a tal normativa.

     Aquellos programas presupuestarios en que laboren mayoritariamente personas contratadas a honorarios, serán regulados por resolución de las entidades correspondientes en cuanto a las condiciones y modalidades de su desempeño. 

 
 
     Artículo 6º.- Agrégase al número 22 del artículo 2º del decreto con fuerza de ley Nº 106, de 1960, del Ministerio de Hacienda, el siguiente inciso segundo:



     &quot;Asimismo, remitirá a la Comisión Especial a que se refiere el artículo 19 de la ley Nº 18.918, Ley Orgánica Constitucional del Congreso Nacional, un informe sobre Finanzas Públicas, que incluirá una síntesis del programa financiero de mediano plazo, en forma previa a la tramitación en dicha Comisión del proyecto de Ley de Presupuestos, sin perjuicio de la exposición sobre la materia que le corresponda efectuar, en tal instancia, al Director de Presupuestos.&quot;. 

 
 
     Artículo 7º.- Créase, en la planta de la Dirección de Presupuestos, adecuada por el decreto con fuerza de ley Nº 3, de 1990, del Ministerio de Hacienda, un cargo de Jefe de Departamento, grado 3º EUS, en la planta de la Subdirección de Presupuestos. 

 
 
     Artículo 8º.- Facúltase al Presidente de la República para que, en el plazo de 180 días a contar de la publicación de la presente ley, fusione las plantas del personal de la Dirección de Presupuestos, sin que pueda aumentar los grados del personal, el número de cargos, o irrogar un mayor gasto fiscal, excepto por la creación del cargo mencionado en el artículo anterior, debiendo efectuarse a este efecto las reasignaciones de su presupuesto. Podrá establecer los requisitos para el ingreso y promoción de los cargos de la planta, los que no serán exigibles para los actuales funcionarios que sean nombrados en ella para desempeñar empleos propios de su planta de origen. Dispondrá todas las medidas de protección de los derechos que correspondan a los funcionarios del Servicio, como ser la mantención del número de bienios, de los regímenes de previsión y demás garantías estatutarias. Los funcionarios adscritos conservarán esa calidad en la nueva planta. Finalmente, dispondrá que el Director de Presupuestos proceda a encasillar a los funcionarios de planta según el orden de escalafón de mérito, y, en caso de producirse un empate, se aplicará lo dispuesto en el artículo 46 de la ley Nº 18.834. 

 
 
     Artículo 9º.- Agrégase la siguiente oración final al inciso primero del artículo 54 de la ley Nº 18.918, Orgánica Constitucional del Congreso Nacional: &quot;Cada Cámara determinará la forma en que participará en el sistema de información administrativa y financiera establecido para los órganos y servicios públicos regidos por la Ley de Administración Financiera del Estado, información que acreditará el cumplimiento de las normas legales aplicables al Congreso Nacional.&quot;.  

 
 
            Artículos transitorios 

 
 
     Artículo 1º transitorio.- Lo dispuesto en los artículos 1º, 2º, 3º, 4º y 5º de esta ley regirá a contar del 1º de enero de 2004, sin perjuicio de que los reglamentos o decretos supremos que, en su caso, establecen, puedan ser dictados desde su publicación, para entrar en vigencia desde la fecha antes señalada. 

 
 
     Artículo 2º transitorio.- Introdúcense, a contar del 1º de enero de 2003, las siguientes modificaciones en la ley Nº 19.842, Ley de Presupuestos del Sector Público para el año 2003:

     a) En la partida 05 Ministerio del Interior, Capítulos 01, Secretaría y Administración General; y 07, Dirección de Seguridad Pública e Informaciones, agrégase, a su glosa 02, letra a) el siguiente párrafo:

     &quot;No regirá la limitación establecida en el inciso segundo del artículo 9º de la ley Nº 18.834, respecto de los empleos a contrata incluidos en esta dotación.&quot;.

     b) En la partida 05, Ministerio del Interior, Capítulo 02, Servicio de Gobierno Interior, agréganse, a su glosa 02, letra a), los siguientes párrafos:

     &quot;No regirá la limitación establecida en el inciso segundo del artículo 9º de la ley Nº 18.834, respecto de los empleos a contrata incluidos en esta dotación.

     Los funcionarios a contrata, que se determine mediante resolución del Subsecretario del Interior, podrán ejercer funciones de carácter directivo en el ámbito de emergencias, para lo cual tendrán la calidad de agentes públicos.&quot;.

     c) En la partida 05, Ministerio del Interior, Capítulo 03, Servicio Electoral, agréganse, a su glosa 2, letra a), los siguientes párrafos:

     &quot;No regirá la limitación establecida en el inciso segundo del artículo 9º de la ley Nº 18.834, respecto de los empleos a contrata incluidos en esta dotación.

     De éstos, 41 deberán ser contratados asimilados a grados y niveles de Escalafón de Procesamiento de Datos del decreto con fuerza de ley Nº 90, de 1977, del Ministerio de Hacienda.&quot;.&quot;. 

 
 
     Habiéndose cumplido con lo establecido en el Nº 1º del artículo 82 de la Constitución Política de la República y por cuanto he tenido a bien aprobarlo y sancionarlo; por tanto promúlguese y llévese a efecto como Ley de la República.
</Parrafo>
				<Parrafo numero="1">&quot;Podrá contratarse sobre la base de honorarios a profesionales y técnicos de educación superior o expertos en determinadas materias, cuando deban realizarse labores accidentales y que no sean las habituales de la institución, mediante resolución de la autoridad correspondiente. Del mismo modo se podrá contratar, sobre la base de honorarios, a extranjeros que posean título correspondiente a la especialidad que se requiera. 
Además, se podrá contratar sobre la base de honorarios, la prestación de servicios para cometidos específicos, conforme a las normas generales. 
Las personas contratadas a honorarios se regirán   por  las   reglas   que  establezca   el respectivo contrato y no les serán aplicables las disposiciones de este Estatuto.</Parrafo>
				<Parrafo numero="1">Decreto 98/1991 - Ministerio de Hacienda</Parrafo>
				<Parrafo numero="1">Artículo 1°.- La celebración de convenios que involucren la prestación de servicios personales a los servicios e instituciones regidos por el decreto ley N° 249, de 1974, que no se relacionen con la construcción de obras, estarán afectos a las normas de este reglamento.
    Para los efectos de lo dispuesto en el inciso anterior se considerarán, en todo caso, que se relacionan con la construcción de obras, los convenios referentes a proyectos, diseños, construcción y su inspección y conservación de obras públicas y los convenios que, a juicio del Ministro del ramo, tengan el carácter indicado.

    Artículo 2°.- Los convenios que se celebren con personas naturales, que involucren la prestación de servicios personales del contratante, deberán ajustarse a las normas de los artículos 10 de la Ley N° 18.834, en su caso, y 33 del decreto ley N° 249, de 1974, o del artículo 13 del decreto ley N° 1.608, de 1976, y demás disposiciones que complementan o reglamentan dichos textos legales.
    No obstante, por decreto supremo fundado del Ministerio correspondiente, podrá contratarse a profesionales, técnicos o expertos, de alta especialización, para labores que, por su naturaleza, no sean susceptibles de ser asimiladas a posiciones de la Escala Unica de Sueldos, sobre la base de honorarios consistentes en una suma alzada u otro sistema cuando se contrate a profesionales.
    La celebración de los convenios a que se refiere el inciso anterior deberá ajustarse a las exigencias establecidas en las letras a), b) y c) del artículo 3°. 


    Artículo 3°.- Los convenios que se celebren con 
personas jurídicas, que involucren la prestación de 
servicios personales de los socios o de personas 
dependientes de la entidad contratante, sobre la base de 
honorarios, deberán cumplir los siguientes requisitos:
    a) La prestación que se contrate debe ser 
indispensable para la ejecución eficiente de las 
funciones que son propias del organismo;
    b) Que no pueda lograrse por medio de los recursos 
humanos propios de la institución;
    c) La entidad contratante deberá contar con las 
disponibilidades presupuestarias suficientes para 
financiar el pago de los honorarios.
    d) Las personas jurídicas cuyos servicios se 
contraten, no podrán tener entre sus socios a uno o más 
funcionarios pertenecientes a las entidades regidas por 
el decreto ley N° 249, de 1974, cuya representación, en 
conjunto, sea superior al 50% del capital social, ni 
tener, entre sus trabajadores, a personas que sean a la 
vez funcionarios de las entidades antes indicadas;
    e) Deberá llamarse a cotizaciones privadas, a no 
menos de tres personas jurídicas, para la adjudicación 
del contrato.
    Los requisitos a que se refieren las letras d) y e) 
de este artículo no serán exigibles respecto de los 
convenios que involucren la prestación de servicios 
personales por entidades del sector público, incluidas 
las Universidades e Institutos Profesionales, estatales, 
o por Universidades e Institutos Profesionales, 
particulares reconocidos por el Estado, o por organismos 
financieros multilaterales. Asimismo, en casos 
calificados, se podrá exceptuar del cumplimiento 
del requisito contemplado en la letra e), mediante 
decreto supremo fundado expedido a través del Ministerio 
de Hacienda, a los convenios de prestación de servicios 
que se celebren con personas jurídicas extranjeras y 
que deban ejecutarse fuera del territorio nacional.
    Del cumplimiento de los requisitos deberá dejarse 
constancia en el decreto supremo del Ministerio del ramo 
que apruebe el convenio y agregarse a sus antecedentes 
la documentación pertinente.
Artículo 4°.- Para resolver respecto de las cotizaciones, deberán considerarse, especialmente, los siguientes aspectos:
    1.- La solvencia económica y la capacidad técnica de los oponentes;
    2.- El título o títulos de especialización de las personas que tendrán a su cargo la responsabilidad directa de la prestación;
    3.- La experiencia de los proponentes y, particularmente, la de las personas que tendrán a su cargo la responsabilidad de la prestación;
    4.- Precio del contrato;
    5.- Plazo en que se cumplirá la prestación;
    6.- Relación entre el precio y el plazo;
    7.- Forma de pago en relación con el avance de los trabajos;
    8.- Multas u otras sanciones que se ofrezca pactar por los atrasos en que pueda incurrirse y por la falta de cumplimiento del contrato, y
    9.- Relación que exista entre el precio y los aranceles vigentes de las profesiones respectivas. 

    Artículo 5°.- Los trabajos concretos de la prestación deberán ser controlados y evaluados, con su avance, cantidad y calidad, por el propio organismo que contrate el servicio.
    El Jefe superior del organismo autorizará los pagos parciales que procedan y el pago total, previa comprobación de que se ha cumplido con lo estipulado. Asimismo, aplicará los castigos pactados por el no cumplimiento o el atraso en que se incurra.

    Artículo 6°.- Derógase el decreto supremo N° 691, de 1977, del Ministerio de Hacienda.</Parrafo>
				<Parrafo numero="1">Contrato Codigo del Trabajo.</Parrafo>
				<Parrafo numero="1">PR-18.834</Parrafo>
				<Parrafo numero="1">Incompatibilidad asociada a ley 15.076 y/o 19.664</Parrafo>
				<Parrafo numero="1">PR-18.834</Parrafo>
				<Parrafo numero="1">Paquete DL 1608 inciso 2</Parrafo>
				<Parrafo numero="1">Se ha dirigido a esta Contraloría General don Manuel Pinto Cortéz, quien prestó servicios en la Subsecretaría General de Gobierno, para solicitar un pronunciamiento relativo a las irregularidades en que se habría incurrido en la ejecución y término anticipado de su contratación a honorarios correspondiente al año 2010.

Requerido su informe, el mencionado organismo señaló, en síntesis, que a través del decreto exento N° 561, de 2010, del Ministerio Secretaría General de Gobierno, se reconoció y puso término a la situación de hecho generada por la no suscripción oportuna, por parte de la autoridad de la época, de los convenios a honorarios de diversas personas, entre ellas el reclamante, reconociendo asimismo el derecho al pago de los respectivos honorarios por las labores prestadas entre el 1 de enero y el 30 de junio de esa anualidad, por lo que entiende que la falta de formalización de la contratación antes referida se encuentra subsanada, añadiendo que para efectos de esclarecer los hechos y determinar eventuales responsabilidades administrativas, se ordenó, por medio de la resolución exenta N° 272, de 2010, la instrucción de una investigación sumaria. 

Sobre el particular, cabe señalar que de los antecedentes tenidos a la vista se advierte que, efectivamente, mediante el aludido decreto exento N° 561, de 2010, se reconocen las labores prestadas, entre otros, por el interesado, en el período antes referido, cuyos convenios a honorarios no fueron oportunamente suscritos por el ex Subsecretario del ramo -y, por ende, tampoco aprobados por el correspondiente acto administrativo-, y la procedencia del pago de honorarios por ese lapso, siendo dable agregar que el número dos del mencionado decreto exento, determina no suscribir un contrato con las referidas personas con posterioridad al 30 de junio de esa misma anualidad, por estimar que sus servicios no resultaban necesarios.

Ahora bien, de lo expresado se advierte que la convención a que alude el peticionario no produjo efectos, como quiera que la autoridad no concurrió a su suscripción, como tampoco se dictó el acto administrativo aprobatorio del mismo, por lo que se estima ajustado a derecho el decreto exento N° 561, de 2010, del Ministerio Secretaría General de Gobierno.

Lo anterior, toda vez que, por una parte, de conformidad con lo previsto en el artículo 1° de la ley N° 19.880, que establece bases de los procedimientos administrativos que rigen los actos de los Órganos de la Administración del Estado y en armonía con el criterio contenido en el dictamen N° 29.178, de 2009, de esta Contraloría General, la voluntad de la autoridad para celebrar ese tipo de convenios debe quedar reflejada tanto en la suscripción del acuerdo de voluntades como en el acto administrativo que lo aprueba, sin perjuicio, por otra, del derecho del prestador de los servicios a ser recompensado por las tareas efectivamente ejecutadas, en concordancia con lo expresado en el dictamen N° 38.146, de 2007, de igual origen.

En este contexto, y sin perjuicio de lo señalado en orden a que la cuestionada convención no alcanzó a producir efectos, conviene hacer presente, en lo que atañe a la falta de aviso previo del cese anticipado de sus funciones, que denuncia el ocurrente, es necesario hacer presente que según el criterio contenido, entre otros, en el dictamen No 60.151, de 2010, de este Ente Fiscalizador, si bien a las personas contratadas a honorarios es posible concederles análogos derechos que los establecidos para los servidores regidos por la ley N° 18.834, sobre Estatuto Administrativo, éstos no pueden ir más allá de los que la ley prescribe para quienes tienen la calidad de funcionarios públicos, por lo que el preaviso que se reclama, aun cuando haya sido convenido, como habría acontecido en la especie, no resulta procedente, pues ello constituye una diferencia que discrimina arbitrariamente en perjuicio de los servidores de planta y a contrata, quienes no gozan del mismo en el evento de disponerse el cese de sus funciones. 

Finalmente, en lo que respecta a los treinta días hábiles de feriado legal que se le reconocerían al interesado en el número uno de la cláusula octava del convenio en estudio, de los cuales le quedarían pendientes quince, es dable manifestar que resulta aplicable el criterio antes señalado, en el sentido de que la autoridad no puede pactar contratos a honorarios donde se establezcan beneficios que excedan en su naturaleza a los que se conceden a los empleados públicos, como el feriado acordado en los términos antes aludidos, derecho respecto del cual, en todo caso, la jurisprudencia de este Organismo de Control ha indicado, en su dictamen N° 43.087, de 2008, que sólo puede hacerse efectivo mientras se tenga la calidad de empleado, de lo que resulta forzoso colegir que si a un funcionario público no se le reconoce el feriado pendiente al momento de ponerse término a sus funciones, tampoco es factible hacerlo en favor de una persona contratada a honorarios luego del término de sus labores.

En consecuencia, en virtud de las consideraciones expuestas, se rechazan los reclamos de don Manuel Pinto Cortéz.

Ramiro Mendoza Zúñiga
Contralor General de la República </Parrafo>
				<Parrafo numero="1">PR-18.834</Parrafo>
				<Parrafo numero="1">PR-18.834</Parrafo>
				<Parrafo numero="1">Decreto 98/1991 - Ministerio de Hacienda</Parrafo>
				<Parrafo numero="1">PR-DL 1.608</Parrafo>
				<Parrafo numero="1">Artículo 1°.- La celebración de convenios que involucren la prestación de servicios personales a los servicios e instituciones regidos por el decreto ley N° 249, de 1974, que no se relacionen con la construcción de obras, estarán afectos a las normas de este reglamento.
    Para los efectos de lo dispuesto en el inciso anterior se considerarán, en todo caso, que se relacionan con la construcción de obras, los convenios referentes a proyectos, diseños, construcción y su inspección y conservación de obras públicas y los convenios que, a juicio del Ministro del ramo, tengan el carácter indicado.

    Artículo 2°.- Los convenios que se celebren con personas naturales, que involucren la prestación de servicios personales del contratante, deberán ajustarse a las normas de los artículos 10 de la Ley N° 18.834, en su caso, y 33 del decreto ley N° 249, de 1974, o del artículo 13 del decreto ley N° 1.608, de 1976, y demás disposiciones que complementan o reglamentan dichos textos legales.
    No obstante, por decreto supremo fundado del Ministerio correspondiente, podrá contratarse a profesionales, técnicos o expertos, de alta especialización, para labores que, por su naturaleza, no sean susceptibles de ser asimiladas a posiciones de la Escala Unica de Sueldos, sobre la base de honorarios consistentes en una suma alzada u otro sistema cuando se contrate a profesionales.
    La celebración de los convenios a que se refiere el inciso anterior deberá ajustarse a las exigencias establecidas en las letras a), b) y c) del artículo 3°. 


    Artículo 3°.- Los convenios que se celebren con 
personas jurídicas, que involucren la prestación de 
servicios personales de los socios o de personas 
dependientes de la entidad contratante, sobre la base de 
honorarios, deberán cumplir los siguientes requisitos:
    a) La prestación que se contrate debe ser 
indispensable para la ejecución eficiente de las 
funciones que son propias del organismo;
    b) Que no pueda lograrse por medio de los recursos 
humanos propios de la institución;
    c) La entidad contratante deberá contar con las 
disponibilidades presupuestarias suficientes para 
financiar el pago de los honorarios.
    d) Las personas jurídicas cuyos servicios se 
contraten, no podrán tener entre sus socios a uno o más 
funcionarios pertenecientes a las entidades regidas por 
el decreto ley N° 249, de 1974, cuya representación, en 
conjunto, sea superior al 50% del capital social, ni 
tener, entre sus trabajadores, a personas que sean a la 
vez funcionarios de las entidades antes indicadas;
    e) Deberá llamarse a cotizaciones privadas, a no 
menos de tres personas jurídicas, para la adjudicación 
del contrato.
    Los requisitos a que se refieren las letras d) y e) 
de este artículo no serán exigibles respecto de los 
convenios que involucren la prestación de servicios 
personales por entidades del sector público, incluidas 
las Universidades e Institutos Profesionales, estatales, 
o por Universidades e Institutos Profesionales, 
particulares reconocidos por el Estado, o por organismos 
financieros multilaterales. Asimismo, en casos 
calificados, se podrá exceptuar del cumplimiento 
del requisito contemplado en la letra e), mediante 
decreto supremo fundado expedido a través del Ministerio 
de Hacienda, a los convenios de prestación de servicios 
que se celebren con personas jurídicas extranjeras y 
que deban ejecutarse fuera del territorio nacional.
    Del cumplimiento de los requisitos deberá dejarse 
constancia en el decreto supremo del Ministerio del ramo 
que apruebe el convenio y agregarse a sus antecedentes 
la documentación pertinente.
Artículo 4°.- Para resolver respecto de las cotizaciones, deberán considerarse, especialmente, los siguientes aspectos:
    1.- La solvencia económica y la capacidad técnica de los oponentes;
    2.- El título o títulos de especialización de las personas que tendrán a su cargo la responsabilidad directa de la prestación;
    3.- La experiencia de los proponentes y, particularmente, la de las personas que tendrán a su cargo la responsabilidad de la prestación;
    4.- Precio del contrato;
    5.- Plazo en que se cumplirá la prestación;
    6.- Relación entre el precio y el plazo;
    7.- Forma de pago en relación con el avance de los trabajos;
    8.- Multas u otras sanciones que se ofrezca pactar por los atrasos en que pueda incurrirse y por la falta de cumplimiento del contrato, y
    9.- Relación que exista entre el precio y los aranceles vigentes de las profesiones respectivas. 

    Artículo 5°.- Los trabajos concretos de la prestación deberán ser controlados y evaluados, con su avance, cantidad y calidad, por el propio organismo que contrate el servicio.
    El Jefe superior del organismo autorizará los pagos parciales que procedan y el pago total, previa comprobación de que se ha cumplido con lo estipulado. Asimismo, aplicará los castigos pactados por el no cumplimiento o el atraso en que se incurra.

    Artículo 6°.- Derógase el decreto supremo N° 691, de 1977, del Ministerio de Hacienda.</Parrafo>
				<Parrafo numero="1">PR-18.834</Parrafo>
				<Parrafo numero="1">LEY 249/74 MODALIDAD ASIMILIDADO  A GRADOS</Parrafo>
				<Parrafo numero="1">Ley de Presupuesto</Parrafo>
			</Visto>
			<Considerando>
				<Parrafo numero="1">POR CORRESPONDER</Parrafo>
			</Considerando>
			<DocumentoTra>
				<DatosDocumento version="1">
					<NumeroDocumento>401910</NumeroDocumento>
					<NumeroDocumentoServicio>9001</NumeroDocumentoServicio>
					<ServicioDocumento version="1">
						<NombreServicio xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string">SERVICIO SIAPER TRA</NombreServicio>
						<NombreDependencia xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string"/>
						<CodigoServicio>1736</CodigoServicio>
						<CodigoDependencia/>
						<Reparticion xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string"/>
						<Departamento xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string"/>
					</ServicioDocumento>
				</DatosDocumento>
				<ListaAntecedentesFisicos>
					<ArchivoAntecedentesCaso>
						<IdCasoC>1238733</IdCasoC>
					</ArchivoAntecedentesCaso>
				</ListaAntecedentesFisicos>
				<ListaCasos>
					<Caso>
						<DatosRaiz>
							<RUN>22053040-K</RUN>
							<Nombres>OMAR ALBERTO</Nombres>
							<ApellidoPaterno>SOSA</ApellidoPaterno>
							<Nacionalidad>ARGENTINA</Nacionalidad>
							<Sexo>Masculino</Sexo>
							<FechaNacimiento>1975-06-16-04:00</FechaNacimiento>
							<EstadoCivil>SOLTERO (A)</EstadoCivil>
							<CorreoElectronico>ososabe@contraloria.cl</CorreoElectronico>
							<CorreoElectronicoPersonal>omar.sosab@gmail.com</CorreoElectronicoPersonal>
							<SituacionMilitar>
								<CumpleLeyReclutamiento xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string">No</CumpleLeyReclutamiento>
								<ServicioMilitarRealizado xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string">No</ServicioMilitarRealizado>
							</SituacionMilitar>
							<AntecedentesPenales>
								<CondenaPorCrimenOSimpleDelito xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string">No</CondenaPorCrimenOSimpleDelito>
								<CondenaPorPenaAflictiva xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string">No</CondenaPorPenaAflictiva>
							</AntecedentesPenales>
							<DireccionParticular>
								<NombreCalleAvenida xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string">Martin Alonso Pinzon</NombreCalleAvenida>
								<NumeroDireccion xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.w3.org/2001/XMLSchema" ns3:type="ns4:string">4830</NumeroDireccion>
								<Region>METROPOLITANA</Region>
							</DireccionParticular>
							<RegimenPrevisional>ISAPRE BANMEDICA</RegimenPrevisional>
						</DatosRaiz>
						<Formulario>
							<AtrForm valor="false" nombre="agente_publico"/>
							<AtrForm valor="368" nombre="comuna_desempenio"/>
							<AtrForm valor="3" nombre="situacion_contratado"/>
							<AtrForm valor="41" nombre="grado"/>
							<AtrForm valor="2" nombre="caracter"/>
							<AtrForm valor="46" nombre="labor"/>
							<AtrForm valor="FUNCION FISCALIZADORA" nombre="descripcion_funcion"/>
							<AtrForm valor="26" nombre="asignacion"/>
							<AtrForm valor="3291" nombre="partida_capitulo_programa"/>
							<AtrForm valor="3" nombre="item"/>
							<AtrForm valor="13" nombre="region_desempenio"/>
							<AtrForm valor="9001" nombre="servicio_desempenio"/>
							<AtrForm valor="13" nombre="region_desempenio-aut-v1"/>
							<AtrForm valor="POR CORRESPONDER" nombre="fundamentacion"/>
							<AtrForm valor="1" nombre="pais_desempenio"/>
							<AtrForm valor="172,201,169,195,173,198,168,166" nombre="beneficios"/>
							<AtrForm valor="true" nombre="termino_anticipado"/>
							<AtrForm valor="119496" nombre="dependencia_desempenio"/>
							<AtrForm valor="2017-09-22" nombre="fecha_hasta"/>
							<AtrForm valor="true" nombre="matriz-vis-v1"/>
							<AtrForm valor="44" nombre="horas_semanales"/>
							<AtrForm nombre="comentario"/>
							<AtrForm valor="1" nombre="jornada"/>
							<AtrForm valor="false" nombre="cuenta_complementaria"/>
							<AtrForm valor="true" nombre="total_tramite"/>
							<AtrForm valor="21" nombre="subtitulo"/>
							<AtrForm valor="368" nombre="comuna_desempenio-aut-v1"/>
							<AtrFormGrupo nombre="subtitulo_item_asignacion">
								<AtrForm valor="3" nombre="item"/>
								<AtrForm nombre="comentario"/>
								<AtrForm valor="21" nombre="subtitulo"/>
								<AtrForm valor="26" nombre="asignacion"/>
							</AtrFormGrupo>
						</Formulario>
					</Caso>
				</ListaCasos>
			</DocumentoTra>
		</ContenidoDecreto>
	</Contenido>
</DocumentoType>
